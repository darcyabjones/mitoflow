docker.enabled = true

manifest {
  name = 'qcflow'
  description = 'Perform qc on illumina reads'
  homePage = 'https://github.com/darcyabjones/qcflow'
  author = 'Darcy Jones'
  mainScript = 'main.nf'
  nextflowVersion = '>=0.31.1'
  version = "0.0.1"
}

params {
  max_memory = 48.GB
  max_cpus = 16
  max_time = 24.h
  help = false
  tracedir = "trace"
  outdir = "."
}


profiles {
  standard {
    includeConfig "conf/base.config"
  }
  pawsey_zeus {
    includeConfig "conf/pawsey_zeus.conf"
  }
  pawsey_magnus {
    includeConfig "conf/pawsey_magnus.conf"
  }
}


// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/pipeline_info/pclust_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/pipeline_info/pclust_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/pipeline_info/pclust_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_info/pclust_DAG.svg"
}


// Function to ensure that resource requirements don't go beyond
// a maximum limit
// From NFCORE
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
